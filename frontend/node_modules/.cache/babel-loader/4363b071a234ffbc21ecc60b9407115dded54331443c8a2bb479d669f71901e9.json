{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahim/PaceMark/frontend/src/components/BookList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Correctly define fetchBooks outside of the BookList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchBooks() {\n  try {\n    const response = await fetch('http://localhost:5000/books'); // Update this URL to your actual backend endpoint\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching books:\", error);\n    return []; // Return an empty array in case of error\n  }\n}\nfunction BookList() {\n  _s();\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    const getBooks = async () => {\n      const fetchedBooks = await fetchBooks();\n      setBooks(fetchedBooks);\n    };\n    getBooks();\n  }, []); // The empty array means this runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"book-list\",\n    children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"book-item\",\n      children: [book.title, \" by \", book.author]\n    }, book.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(BookList, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fetchBooks","response","fetch","ok","Error","data","json","error","console","BookList","_s","books","setBooks","getBooks","fetchedBooks","className","children","map","book","title","author","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ibrahim/PaceMark/frontend/src/components/BookList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Correctly define fetchBooks outside of the BookList component\nasync function fetchBooks() {\n    try {\n        const response = await fetch('http://localhost:5000/books'); // Update this URL to your actual backend endpoint\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching books:\", error);\n        return [];  // Return an empty array in case of error\n    }\n}\n\nfunction BookList() {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const fetchedBooks = await fetchBooks();\n      setBooks(fetchedBooks);\n    };\n\n    getBooks();\n  }, []); // The empty array means this runs once when the component mounts\n\n  return (\n    <ul className=\"book-list\">\n      {books.map(book => (\n        <li key={book.id} className=\"book-item\">{book.title} by {book.author}</li>\n      ))}\n    </ul>\n  );\n}\n\nexport default BookList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,UAAUA,CAAA,EAAG;EACxB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE,CAAC,CAAE;EAChB;AACJ;AAEA,SAASE,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMgB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,YAAY,GAAG,MAAMd,UAAU,CAAC,CAAC;MACvCY,QAAQ,CAACE,YAAY,CAAC;IACxB,CAAC;IAEDD,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEd,OAAA;IAAIgB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACtBL,KAAK,CAACM,GAAG,CAACC,IAAI,iBACbnB,OAAA;MAAkBgB,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAEE,IAAI,CAACC,KAAK,EAAC,MAAI,EAACD,IAAI,CAACE,MAAM;IAAA,GAA3DF,IAAI,CAACG,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyD,CAC1E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACf,EAAA,CAnBQD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAqBjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}